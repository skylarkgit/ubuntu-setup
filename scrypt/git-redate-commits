# Usage: git redate-commits "start-date"
# Example: git redate-commits "2023-01-01"

start_date="$1"
end_date="$2"

if [ -z "$start_date" ]; then
    echo "Error: Start date is required."
    echo "Usage: git redate-commits \"start-date\""
    exit 1
fi

echo "Setting from $start_date to $end_date"

total_commits=$(($(git rev-list --count HEAD)))
start_timestamp=$(date -d "$start_date" +%s)
end_timestamp=$(date -d "$end_date" +%s)
time_diff=$((end_timestamp - start_timestamp))
interval=$((time_diff / (total_commits)))

echo "Interval: $interval"
echo "Total_Commits: $total_commits"
echo "Start: $start_timestamp"
echo "End: $end_timestamp"
echo "Timediff: $time_diff"

temp_callback_script=$(mktemp)
temp_commit_num=$(mktemp)
export TEMP_COMMIT_NUM_FILE="$temp_commit_num"
echo "0" > "$temp_commit_num"
cat > "$temp_callback_script" << EOL
import os
import sys
import datetime
import random

def load_number(filename):
    with open(filename, 'r') as f:
        number = int(f.read())
    return number

def save_number(filename, number):
    with open(filename, 'w') as f:
        f.write(str(number))

def redate_commit(commit, start_timestamp, interval, commit_number):
    new_timestamp = start_timestamp + commit_number * interval
    new_date = str(new_timestamp) + " +0000"
    print('redating to ' +str(datetime.datetime.fromtimestamp(new_timestamp).strftime("%Y-%m-%dT%H:%M:%S").encode('utf-8')) + " start_timestamp:" + str(start_timestamp) + " interval:" +str(interval) + " commit_number:" +str(commit_number))
    print(commit.message)
    commit.author_date = new_date.encode('utf-8')
    commit.committer_date = new_date.encode('utf-8')

filename = os.environ["TEMP_COMMIT_NUM_FILE"]
number = load_number(filename)
commit_number = number
number += 1
if random.random() < 0.7:
    commit_number = number-1
save_number(filename, number)
start_timestamp = int(os.environ["START_TIMESTAMP"])
interval = int(os.environ["INTERVAL"])

redate_commit(commit, start_timestamp, interval, commit_number)

EOL

export START_TIMESTAMP=$start_timestamp
export INTERVAL=$interval

git filter-repo --force --refs main --commit-callback "$temp_callback_script" --tag-rename '':'old-tags/'

rm "$temp_callback_script"